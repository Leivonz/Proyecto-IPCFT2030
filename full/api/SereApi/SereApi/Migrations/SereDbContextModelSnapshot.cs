// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SereApi.Models;

#nullable disable

namespace SereApi.Migrations
{
    [DbContext(typeof(SereDbContext))]
    partial class SereDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SereApi.Models.Area", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArea"), 1L, 1);

                    b.Property<string>("NameArea")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdArea")
                        .HasName("PK__Area__2FC141AAEF044606");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"), 1L, 1);

                    b.Property<string>("NameCountry")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdCountry")
                        .HasName("PK__Country__F99F104DBB92DEC1");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"), 1L, 1);

                    b.Property<decimal>("CostEvent")
                        .HasColumnType("money");

                    b.Property<DateTime>("DateEvent")
                        .HasColumnType("date");

                    b.Property<string>("DescriptionEvent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IdEventType")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<string>("NameEvent")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("ObjectiveEvent")
                        .HasColumnType("int");

                    b.Property<int?>("SizeEvent")
                        .HasColumnType("int");

                    b.HasKey("IdEvent")
                        .HasName("PK__Event__E0B2AF39A124F1D6");

                    b.HasIndex("IdEventType");

                    b.HasIndex("IdOrganization");

                    b.HasIndex("ObjectiveEvent");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.EventType", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"), 1L, 1);

                    b.Property<string>("NameEventType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdEvent")
                        .HasName("PK__EventTyp__E0B2AF3997755298");

                    b.ToTable("EventType", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Objective", b =>
                {
                    b.Property<int>("IdObjective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdObjective"), 1L, 1);

                    b.Property<string>("IndicadorObjective")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MetasObjective")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NameObjective")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ObjectiveObjective")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("IdObjective")
                        .HasName("PK__Objectiv__76514F972A885A7E");

                    b.ToTable("Objective", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Organization", b =>
                {
                    b.Property<int>("IdOrganization")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganization"), 1L, 1);

                    b.Property<int?>("Country")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionOrganization")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EmailOrganization")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdOrganizationStatus")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrganizationType")
                        .HasColumnType("int");

                    b.Property<string>("NameOrganization")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdOrganization")
                        .HasName("PK__Organiza__C14A1C272D546BFB");

                    b.HasIndex("Country");

                    b.HasIndex("IdOrganizationStatus");

                    b.HasIndex("IdOrganizationType");

                    b.ToTable("Organization", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.OrganizationObjective", b =>
                {
                    b.Property<int>("IdOrganizationObjective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganizationObjective"), 1L, 1);

                    b.Property<int?>("IdObjective")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrganization")
                        .HasColumnType("int");

                    b.HasKey("IdOrganizationObjective")
                        .HasName("PK__Organiza__4D7C5147A927FDCC");

                    b.HasIndex("IdObjective");

                    b.HasIndex("IdOrganization");

                    b.ToTable("OrganizationObjective", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.OrganizationPerson", b =>
                {
                    b.Property<int>("IdOrganizationPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganizationPerson"), 1L, 1);

                    b.Property<int?>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdOrganizationPerson")
                        .HasName("PK__Organiza__573676C95D1F2260");

                    b.HasIndex("IdOrganization");

                    b.HasIndex("IdPerson");

                    b.ToTable("OrganizationPerson", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.OrganizationProject", b =>
                {
                    b.Property<int>("IdOrganizationProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganizationProject"), 1L, 1);

                    b.Property<int?>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<int?>("IdProject")
                        .HasColumnType("int");

                    b.HasKey("IdOrganizationProject")
                        .HasName("PK__Organiza__171D148FD6B00AAF");

                    b.HasIndex("IdOrganization");

                    b.HasIndex("IdProject");

                    b.ToTable("OrganizationProject", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.OrganizationStatus", b =>
                {
                    b.Property<int>("IdOrganizationStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganizationStatus"), 1L, 1);

                    b.Property<string>("NameOrganizationStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdOrganizationStatus")
                        .HasName("PK__Organiza__EF65CC7F6C80E7B8");

                    b.ToTable("OrganizationStatus", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.OrganizationType", b =>
                {
                    b.Property<int>("IdOrganizationType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganizationType"), 1L, 1);

                    b.Property<string>("NameOrganizationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdOrganizationType")
                        .HasName("PK__Organiza__4D4A4C69CDAE7A2A");

                    b.ToTable("OrganizationType", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"), 1L, 1);

                    b.Property<string>("EmailPerson")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NamePerson")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PhonePerson")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SurnamePerson")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdPerson")
                        .HasName("PK__Person__A5D4E15B84CD3DA8");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.PersonEvent", b =>
                {
                    b.Property<int>("IdPersonEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonEvent"), 1L, 1);

                    b.Property<int?>("IdEvent")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdPersonEvent")
                        .HasName("PK__PersonEv__7E6E2035A4F07BCC");

                    b.HasIndex("IdEvent");

                    b.HasIndex("IdPerson");

                    b.ToTable("PersonEvent", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.PersonObjective", b =>
                {
                    b.Property<int>("IdPersonObjective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonObjective"), 1L, 1);

                    b.Property<int?>("IdObjective")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdPersonObjective")
                        .HasName("PK__PersonOb__E2F376D70A3142B9");

                    b.HasIndex("IdObjective");

                    b.HasIndex("IdPerson");

                    b.ToTable("PersonObjective", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.PersonProject", b =>
                {
                    b.Property<int>("IdPersonProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonProject"), 1L, 1);

                    b.Property<int?>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int?>("IdProject")
                        .HasColumnType("int");

                    b.HasKey("IdPersonProject")
                        .HasName("PK__PersonPr__8D705DB6991C390F");

                    b.HasIndex("IdPerson");

                    b.HasIndex("IdProject");

                    b.ToTable("PersonProject", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProject"), 1L, 1);

                    b.Property<DateTime?>("CreationDateProject")
                        .HasColumnType("date");

                    b.Property<string>("DescriptionProject")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("EndDateProject")
                        .HasColumnType("date");

                    b.Property<int?>("IdArea")
                        .HasColumnType("int");

                    b.Property<int?>("IdObjectiveObjective")
                        .HasColumnType("int");

                    b.Property<int?>("IdPersonResponsable")
                        .HasColumnType("int");

                    b.Property<int?>("IdProjectStatus")
                        .HasColumnType("int");

                    b.Property<string>("KeyWordsProject")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("MonthsProject")
                        .HasColumnType("int");

                    b.Property<int?>("MontoProject")
                        .HasColumnType("int");

                    b.Property<string>("ObjectivesProject")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("StartDateProject")
                        .HasColumnType("date");

                    b.HasKey("IdProject")
                        .HasName("PK__Project__B9E13D24B9508CF8");

                    b.HasIndex("IdArea");

                    b.HasIndex("IdPersonResponsable");

                    b.HasIndex("IdProjectStatus");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.ProjectObjective", b =>
                {
                    b.Property<int>("IdProjectObjective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjectObjective"), 1L, 1);

                    b.Property<int?>("IdObjective")
                        .HasColumnType("int");

                    b.Property<int?>("IdProject")
                        .HasColumnType("int");

                    b.HasKey("IdProjectObjective")
                        .HasName("PK__ProjectO__A2C5D3BE860140F1");

                    b.HasIndex("IdObjective");

                    b.HasIndex("IdProject");

                    b.ToTable("ProjectObjective", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.ProjectStatus", b =>
                {
                    b.Property<int>("IdProjectStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjectStatus"), 1L, 1);

                    b.Property<string>("NameProjectStatus")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdProjectStatus")
                        .HasName("PK__ProjectS__E0824C87AB6CACAD");

                    b.ToTable("ProjectStatus", (string)null);
                });

            modelBuilder.Entity("SereApi.Models.Event", b =>
                {
                    b.HasOne("SereApi.Models.EventType", "IdEventTypeNavigation")
                        .WithMany("Events")
                        .HasForeignKey("IdEventType")
                        .HasConstraintName("FkEventEventType");

                    b.HasOne("SereApi.Models.Organization", "IdOrganizationNavigation")
                        .WithMany("Events")
                        .HasForeignKey("IdOrganization")
                        .IsRequired()
                        .HasConstraintName("FkEventOrganization");

                    b.HasOne("SereApi.Models.Objective", "ObjectiveEventNavigation")
                        .WithMany("Events")
                        .HasForeignKey("ObjectiveEvent")
                        .IsRequired()
                        .HasConstraintName("FkEventObjective");

                    b.Navigation("IdEventTypeNavigation");

                    b.Navigation("IdOrganizationNavigation");

                    b.Navigation("ObjectiveEventNavigation");
                });

            modelBuilder.Entity("SereApi.Models.Organization", b =>
                {
                    b.HasOne("SereApi.Models.Country", "CountryNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("Country")
                        .HasConstraintName("FkOrganizationCountry");

                    b.HasOne("SereApi.Models.OrganizationStatus", "IdOrganizationStatusNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("IdOrganizationStatus")
                        .HasConstraintName("FkOrganizationOrganizationStatus");

                    b.HasOne("SereApi.Models.OrganizationType", "IdOrganizationTypeNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("IdOrganizationType")
                        .HasConstraintName("FkOrganizationOrganizationType");

                    b.Navigation("CountryNavigation");

                    b.Navigation("IdOrganizationStatusNavigation");

                    b.Navigation("IdOrganizationTypeNavigation");
                });

            modelBuilder.Entity("SereApi.Models.OrganizationObjective", b =>
                {
                    b.HasOne("SereApi.Models.Objective", "IdObjectiveNavigation")
                        .WithMany("OrganizationObjectives")
                        .HasForeignKey("IdObjective")
                        .HasConstraintName("FkObjectiveOrganization");

                    b.HasOne("SereApi.Models.Organization", "IdOrganizationNavigation")
                        .WithMany("OrganizationObjectives")
                        .HasForeignKey("IdOrganization")
                        .HasConstraintName("FkOrganizationObjective");

                    b.Navigation("IdObjectiveNavigation");

                    b.Navigation("IdOrganizationNavigation");
                });

            modelBuilder.Entity("SereApi.Models.OrganizationPerson", b =>
                {
                    b.HasOne("SereApi.Models.Organization", "IdOrganizationNavigation")
                        .WithMany("OrganizationPeople")
                        .HasForeignKey("IdOrganization")
                        .HasConstraintName("FkOrganizationPerson");

                    b.HasOne("SereApi.Models.Person", "IdPersonNavigation")
                        .WithMany("OrganizationPeople")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FkPersonOrganization");

                    b.Navigation("IdOrganizationNavigation");

                    b.Navigation("IdPersonNavigation");
                });

            modelBuilder.Entity("SereApi.Models.OrganizationProject", b =>
                {
                    b.HasOne("SereApi.Models.Organization", "IdOrganizationNavigation")
                        .WithMany("OrganizationProjects")
                        .HasForeignKey("IdOrganization")
                        .HasConstraintName("FkOrganizationProject");

                    b.HasOne("SereApi.Models.Project", "IdProjectNavigation")
                        .WithMany("OrganizationProjects")
                        .HasForeignKey("IdProject")
                        .HasConstraintName("FkProjectOrganization");

                    b.Navigation("IdOrganizationNavigation");

                    b.Navigation("IdProjectNavigation");
                });

            modelBuilder.Entity("SereApi.Models.PersonEvent", b =>
                {
                    b.HasOne("SereApi.Models.Event", "IdEventNavigation")
                        .WithMany("PersonEvents")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("FkEventEventEvent");

                    b.HasOne("SereApi.Models.Person", "IdPersonNavigation")
                        .WithMany("PersonEvents")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FkPersonEventEvent");

                    b.Navigation("IdEventNavigation");

                    b.Navigation("IdPersonNavigation");
                });

            modelBuilder.Entity("SereApi.Models.PersonObjective", b =>
                {
                    b.HasOne("SereApi.Models.Objective", "IdObjectiveNavigation")
                        .WithMany("PersonObjectives")
                        .HasForeignKey("IdObjective")
                        .HasConstraintName("FkObjectivePerson");

                    b.HasOne("SereApi.Models.Person", "IdPersonNavigation")
                        .WithMany("PersonObjectives")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FkPersonObjective");

                    b.Navigation("IdObjectiveNavigation");

                    b.Navigation("IdPersonNavigation");
                });

            modelBuilder.Entity("SereApi.Models.PersonProject", b =>
                {
                    b.HasOne("SereApi.Models.Person", "IdPersonNavigation")
                        .WithMany("PersonProjects")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FkPersonProject");

                    b.HasOne("SereApi.Models.Project", "IdProjectNavigation")
                        .WithMany("PersonProjects")
                        .HasForeignKey("IdProject")
                        .HasConstraintName("FkProjectPerson");

                    b.Navigation("IdPersonNavigation");

                    b.Navigation("IdProjectNavigation");
                });

            modelBuilder.Entity("SereApi.Models.Project", b =>
                {
                    b.HasOne("SereApi.Models.Area", "IdAreaNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("IdArea")
                        .HasConstraintName("FkProjectArea");

                    b.HasOne("SereApi.Models.Person", "IdPersonResponsableNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("IdPersonResponsable")
                        .HasConstraintName("FkProjectPersonResponsable");

                    b.HasOne("SereApi.Models.ProjectStatus", "IdProjectStatusNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("IdProjectStatus")
                        .HasConstraintName("FkProjectProjectStatus");

                    b.Navigation("IdAreaNavigation");

                    b.Navigation("IdPersonResponsableNavigation");

                    b.Navigation("IdProjectStatusNavigation");
                });

            modelBuilder.Entity("SereApi.Models.ProjectObjective", b =>
                {
                    b.HasOne("SereApi.Models.Objective", "IdObjectiveNavigation")
                        .WithMany("ProjectObjectives")
                        .HasForeignKey("IdObjective")
                        .HasConstraintName("FkObjectiveProject");

                    b.HasOne("SereApi.Models.Project", "IdProjectNavigation")
                        .WithMany("ProjectObjectives")
                        .HasForeignKey("IdProject")
                        .HasConstraintName("FkProjectObjective");

                    b.Navigation("IdObjectiveNavigation");

                    b.Navigation("IdProjectNavigation");
                });

            modelBuilder.Entity("SereApi.Models.Area", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("SereApi.Models.Country", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("SereApi.Models.Event", b =>
                {
                    b.Navigation("PersonEvents");
                });

            modelBuilder.Entity("SereApi.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("SereApi.Models.Objective", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("OrganizationObjectives");

                    b.Navigation("PersonObjectives");

                    b.Navigation("ProjectObjectives");
                });

            modelBuilder.Entity("SereApi.Models.Organization", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("OrganizationObjectives");

                    b.Navigation("OrganizationPeople");

                    b.Navigation("OrganizationProjects");
                });

            modelBuilder.Entity("SereApi.Models.OrganizationStatus", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("SereApi.Models.OrganizationType", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("SereApi.Models.Person", b =>
                {
                    b.Navigation("OrganizationPeople");

                    b.Navigation("PersonEvents");

                    b.Navigation("PersonObjectives");

                    b.Navigation("PersonProjects");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("SereApi.Models.Project", b =>
                {
                    b.Navigation("OrganizationProjects");

                    b.Navigation("PersonProjects");

                    b.Navigation("ProjectObjectives");
                });

            modelBuilder.Entity("SereApi.Models.ProjectStatus", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
